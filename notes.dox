<div style={Regtangle}></div>
            <ButtonGroup>
              {seats.filter(seat => seat.attributes.table === table.attributes.number).map(seat => <button type="button" class="btn btn-outline-primary" dataToggle="button" ariaPressed="false" autocomplete="off" onClick={() => { handleShow();  setCurrentSeat(seat)}}>
                Seat {seat.attributes.number}
              </button>)}
            </ButtonGroup>



return <div className="vstack gap-2 mx-auto">
    <h5>Status: unseated</h5>
    {teacherAdded && <h5>Added successfully!</h5>}
    {!addingTeacher && !teacherAdded && <Button className={styles['btn-large']} variant="outline-primary"onClick={() => setAddingTeacher(true)}>Add Teacher</Button>}
    {addingTeacher && !teacherAdded && <>
      <select class="form-select" aria-label="Default select example" onChange={(e) => { setTeacher(parseInt(e.target.value)) }}>
        {teachers && teachers.data.map(teacher => <option value={teacher.id}>{teacher.attributes.name}</option>)}
      </select>
      <Button variant="success" onClick={assignTeacherToSeat}>Add</Button>
    </>}
  </div>

  <div class ="container">
      {order.items.map((item, index) => 
      <div class="row"> 
        <div class="col-4">
          <div className="item-name">
          {item}
          </div>
        </div>
        <div class="col-md-auto">
          <Button variant="danger" onClick={() => removeItem(index)}>Remove</Button>
         </div>
      </div>)
      }    
    </div>


    <ul>
            {items.map(item => <p><Form.Select value={item.id} onChange={(e) => { setItems(items.map((i, index) => (index === items.indexOf(item) ? allItems.data[e.target.value - 1] : i))); console.log(items) }}>
              {allItems.data.map(allItem => <option value={allItem.id}>{allItem.attributes.name}</option>)}
            </Form.Select>
              <Button variant="danger" onClick={() => removeItem(item.id)}>Remove Item</Button></p>)}
            <Button onClick={addItem}>Add Item</Button>
          </ul>